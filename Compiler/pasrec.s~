Symbol table level 0
 15200272        real  BASIC  basicdt   1          siz     8
 15200368     integer  BASIC  basicdt   0          siz     4
 15200464        char  BASIC  basicdt   2          siz     1
 15200560     boolean  BASIC  basicdt   3          siz     4
 15200656         exp  knd 5 0  typ 15200752  lvl  0  siz     0  off     0
(FUNCTION real
          real)
 15200944       trexp  knd 5 0  typ 15201040  lvl  0  siz     0  off     0
(FUNCTION real
          real)
 15201232         sin  knd 5 0  typ 15201328  lvl  0  siz     0  off     0
(FUNCTION real
          real)
 15201520         cos  knd 5 0  typ 15201616  lvl  0  siz     0  off     0
(FUNCTION real
          real)
 15201808       trsin  knd 5 0  typ 15201904  lvl  0  siz     0  off     0
(FUNCTION real
          real)
 15202096        sqrt  knd 5 0  typ 15202192  lvl  0  siz     0  off     0
(FUNCTION real
          real)
 15202384       round  knd 5 0  typ 15202480  lvl  0  siz     0  off     0
(FUNCTION real
          real)
 15202672      iround  knd 5 0  typ 15202768  lvl  0  siz     0  off     0
(FUNCTION integer
          real)
 15202960         ord  knd 5 0  typ 15203056  lvl  0  siz     0  off     0
(FUNCTION integer
          integer)
 15203248         new  knd 5 0  typ 15203344  lvl  0  siz     0  off     0
(FUNCTION integer
          integer)
 15203536       trnew  knd 5 0  typ 15203632  lvl  0  siz     0  off     0
(FUNCTION integer
          integer)
 15203824       write  knd 5 0  typ 15203920  lvl  0  siz     0  off     0
(FUNCTION NULL
          char)
 15204112     writeln  knd 5 0  typ 15204208  lvl  0  siz     0  off     0
(FUNCTION NULL
          char)
 15204400      writef  knd 5 0  typ 15204496  lvl  0  siz     0  off     0
(FUNCTION NULL
          real)
 15204688    writelnf  knd 5 0  typ 15204784  lvl  0  siz     0  off     0
(FUNCTION NULL
          real)
 15204976      writei  knd 5 0  typ 15205072  lvl  0  siz     0  off     0
(FUNCTION NULL
          integer)
 15205264    writelni  knd 5 0  typ 15205360  lvl  0  siz     0  off     0
(FUNCTION NULL
          integer)
 15205552        read  knd 5 0  typ 15205648  lvl  0  siz     0  off     0
(FUNCTION NULL
          NULL)
 15205840      readln  knd 5 0  typ 15205936  lvl  0  siz     0  off     0
(FUNCTION NULL
          NULL)
 15206128         eof  knd 5 0  typ 15206224  lvl  0  siz     0  off     0
(FUNCTION boolean
          NULL)
Symbol table level 1
 15224624     complex  TYPE   typ 15224528  lvl  1  siz    16  off     0
(RECORD (re real)
        (im real))
 15225360         red  CONST  typ INTEGER  val  0
 15225456       white  CONST  typ INTEGER  val  1
 15225552        blue  CONST  typ INTEGER  val  2
 15225744       color  TYPE   typ 15225648  lvl  1  siz     4  off     0
  0 ..   2
 15227664          pp  TYPE   typ 15228528  lvl  1  siz     8  off     0
(^ person)
 15228048      person  TYPE   typ 15227952  lvl  1  siz    48  off     0
(RECORD (age integer)
        (friend (^ person))
        (location (RECORD (re real)
                          (im real)))
        (favorite   0 ..   2)
        (salary real))
 15229168           c  VAR    0 typ 15224624  lvl  1  siz    16  off     0
(RECORD (re real)
        (im real))
 15229264           d  VAR    0 typ 15224624  lvl  1  siz    16  off    16
(RECORD (re real)
        (im real))
 15229744           i  VAR    0 typ integer  lvl  1  siz     4  off    32
 15229840         sum  VAR    0 typ integer  lvl  1  siz     4  off    36
 15230832          ac  VAR    0 typ 15230736  lvl  1  siz   160  off    48
(ARRAY   1 ..  10 (RECORD (re real)
                          (im real)))
 15232048         aco  VAR    0 typ 15231856  lvl  1  siz   120  off   208
(ARRAY   1 ..  10 (ARRAY   0 ..   2   0 ..   2))
 15232784        john  VAR    0 typ 15227664  lvl  1  siz     8  off   328
(^ person)
 15232880        mary  VAR    0 typ 15227664  lvl  1  siz     8  off   336
(^ person)
 15232976        fred  VAR    0 typ 15227664  lvl  1  siz     8  off   344
(^ person)
 15233072         ptr  VAR    0 typ 15227664  lvl  1  siz     8  off   352
(^ person)
 15234064      people  VAR    0 typ 15233968  lvl  1  siz   960  off   368
(ARRAY   1 ..  20 (RECORD (age integer)
                          (friend (^ person))
                          (location (RECORD (re real)
                                            (im real)))
                          (favorite   0 ..   2)
                          (salary real)))
yyparse result =        0
(program graph1 (progn output)
                (progn (:= john (funcall new 48))
                       (:= mary (funcall new 48))
                       (:= fred (funcall new 48))
                       (:= (aref (^ john)
                                 32)
                           2)
                       (:= (aref (^ john)
                                 0)
                           19)
                       (progn (label 1)
                              (:= (aref (^ john)
                                        8)
                                  mary))
                       (:= (aref (^ john)
                                 16)
                           3)
                       (:= (aref (^ mary)
                                 0)
                           21)
                       (:= (aref (^ mary)
                                 8)
                           fred)
                       (progn (label 0)
                              (:= (aref (^ fred)
                                        0)
                                  20))
                       (:= (aref (^ fred)
                                 8)
                           0)
                       (:= ptr john)
                       (:= sum 0)
                       (:= i 1)
                       (progn (label 2)
                              (if (< i 10)
                                  (progn (progn (:= i (+ i 1)))
                                         (goto 2))))
                       (funcall write 'i = ')
                       (funcall writelni i)
                       (funcall write 'Sum of ages =')
                       (funcall writelni sum)
                       (funcall write 'Fred loc im =')))
# ---------------- Beginning of Generated Code --------------------
        .file   "foo"
        .text
.globl graph1
        .type   graph1, @function
graph1:
.LFB0:
	.cfi_startproc
	pushq	%rbp              # save base pointer on stack
	.cfi_def_cfa_offset 16
	movq	%rsp, %rbp        # move stack pointer to base pointer
	.cfi_offset 6, -16
	.cfi_def_cfa_register 6
        subq	$1344, %rsp 	  # make space for this stack frame
	movq	%rbx, %r9        # save %rbx (callee-saved) in %r9
# ------------------------- begin Your code -----------------------------
	movl	$48,%eax         	#  48 -> %eax
	movl	%eax,%edi         	#  %eax -> %edi
	call	new              	#  new()
	movq	%rax,-1016(%rbp)     	#  %rax -> john
	movl	$48,%eax         	#  48 -> %eax
	movl	%eax,%edi         	#  %eax -> %edi
	call	new              	#  new()
	movq	%rax,-1008(%rbp)     	#  %rax -> mary
	movl	$48,%eax         	#  48 -> %eax
	movl	%eax,%edi         	#  %eax -> %edi
	call	new              	#  new()
	movq	%rax,-1000(%rbp)     	#  %rax -> fred
	movl	$2,%eax         	#  2 -> %eax
	movq	-1016(%rbp),%rcx     	#  john -> %rcx
	movl	%eax,32(%rcx)         	#  %eax -> ^. [32+%rcx]
	movl	$19,%eax         	#  19 -> %eax
	movq	-1016(%rbp),%rcx     	#  john -> %rcx
	movl	%eax,0(%rcx)         	#  %eax -> ^. [0+%rcx]
.L1:
	movq	-1008(%rbp),%rax     	#  mary -> %rax
	movq	-1016(%rbp),%rcx     	#  john -> %rcx
	movq	%rax,8(%rcx)         	#  %rax -> ^. [8+%rcx]
	movl	$3,%eax         	#  3 -> %eax
	movq	-1016(%rbp),%rcx     	#  john -> %rcx
	movl	%eax,16(%rcx)         	#  %eax -> ^. [16+%rcx]
	movl	$21,%eax         	#  21 -> %eax
	movq	-1008(%rbp),%rcx     	#  mary -> %rcx
	movl	%eax,0(%rcx)         	#  %eax -> ^. [0+%rcx]
	movq	-1000(%rbp),%rax     	#  fred -> %rax
	movq	-1008(%rbp),%rcx     	#  mary -> %rcx
	movq	%rax,8(%rcx)         	#  %rax -> ^. [8+%rcx]
.L0:
	movl	$20,%eax         	#  20 -> %eax
	movq	-1000(%rbp),%rcx     	#  fred -> %rcx
	movl	%eax,0(%rcx)         	#  %eax -> ^. [0+%rcx]
	movq	$0,%rax         	#  -> 0 -> %rax
	movq	-1000(%rbp),%rcx     	#  fred -> %rcx
	movq	%rax,8(%rcx)         	#  %rax -> ^. [8+%rcx]
	movq	-1016(%rbp),%rax     	#  john -> %rax
	movl	%eax,-992(%rbp)     	#  %eax -> ptr
	movl	$0,%eax         	#  0 -> %eax
	movl	%eax,-1308(%rbp)     	#  %eax -> sum
	movl	$1,%eax         	#  1 -> %eax
	movl	%eax,-1312(%rbp)     	#  %eax -> i
.L2:
	movl	-1312(%rbp),%eax     	#  i -> %eax
	movl	$10,%ecx         	#  10 -> %ecx
	cmpl	%ecx,%eax           	#  compare %eax - %ecx
	jl	.L4 			#  jump if     <
	jmp	.L5 			#  jump 
.L4:
	movl	-1312(%rbp),%eax     	#  i -> %eax
	movl	$1,%ecx         	#  1 -> %ecx
	addl	%ecx,%eax         	#  %eax + %ecx -> %eax
	movl	%eax,-1312(%rbp)     	#  %eax -> i
	jmp	.L2 			#  jump 
.L5:
	movl	$.LC6,%edi       	#  addr of literal .LC6
	call	write              	#  write()
	movl	-1312(%rbp),%eax     	#  i -> %eax
	movl	%eax,%edi         	#  %eax -> %edi
	call	writelni              	#  writelni()
	movl	$.LC7,%edi       	#  addr of literal .LC7
	call	write              	#  write()
	movl	-1308(%rbp),%eax     	#  sum -> %eax
	movl	%eax,%edi         	#  %eax -> %edi
	call	writelni              	#  writelni()
	movl	$.LC8,%edi       	#  addr of literal .LC8
	call	write              	#  write()
# ----------------------- begin Epilogue code ---------------------------
	movq	%r9, %rbx        # restore %rbx (callee-saved) from %r9
        leave
        ret
        .cfi_endproc
.LFE0:
        .size   graph1, .-graph1
# ----------------- end Epilogue; Literal data follows ------------------
        .section        .rodata
	.align  4
.LC6:
	.string	"i = "
	.align  4
.LC7:
	.string	"Sum of ages ="
	.align  4
.LC8:
	.string	"Fred loc im ="

        .ident  "CS 375 Compiler - Summer 2013"
